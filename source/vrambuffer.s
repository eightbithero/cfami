;
; File generated by cc65 v 2.18 - N/A
;
	.fopt		compiler,"cc65 v 2.18 - N/A"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_pal_col
	.import		_ppu_on_all
	.import		_scroll
	.import		_set_vram_update
	.import		_memset
	.import		_sprintf
	.import		_vrambuf_clear
	.import		_vrambuf_put
	.export		_scroll_demo
	.export		_main

.segment	"RODATA"

L0012:
	.byte	$25,$36,$78,$20,$25,$36,$64,$00

; ---------------------------------------------------------------
; void __near__ scroll_demo (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_scroll_demo: near

.segment	"CODE"

;
; int x = 0;   // x scroll position
;
	jsr     push0
;
; int y = 0;   // y scroll position
;
	jsr     push0
;
; int dy = 1;  // y scroll direction
;
	lda     #$01
	jsr     pusha0
;
; memset(str, 0, sizeof(str));
;
	ldy     #$20
	jsr     subysp
	lda     #$00
	ldy     #$1F
L0043:	sta     (sp),y
	dey
	bpl     L0043
;
; sprintf(str, "%6x %6d", y, y);
;
L000C:	jsr     decsp4
	lda     sp
	ldx     sp+1
	clc
	adc     #$04
	bcc     L0013
	inx
L0013:	ldy     #$02
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	lda     #<(L0012)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(L0012)
	sta     (sp),y
	ldy     #$29
	jsr     pushwysp
	ldy     #$2B
	jsr     pushwysp
	ldy     #$08
	jsr     _sprintf
;
; vrambuf_put(NTADR_A(2,y%30), str, 32);
;
	jsr     decsp4
	ldy     #$29
	jsr     pushwysp
	ldx     #$00
	lda     #$1E
	jsr     tosmoda0
	jsr     aslax4
	stx     tmp1
	asl     a
	rol     tmp1
	ora     #$02
	pha
	lda     tmp1
	ora     #$20
	tax
	pla
	ldy     #$02
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	lda     sp
	ldx     sp+1
	clc
	adc     #$04
	bcc     L001F
	inx
L001F:	ldy     #$00
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	lda     #$20
	jsr     _vrambuf_put
;
; y += dy;
;
	ldy     #$20
	lda     (sp),y
	ldy     #$22
	clc
	adc     (sp),y
	sta     (sp),y
	dey
	lda     (sp),y
	ldy     #$23
	adc     (sp),y
	sta     (sp),y
;
; if (y >= 479) dy = -1;
;
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$DF
	txa
	sbc     #$01
	bvs     L0025
	eor     #$80
L0025:	bpl     L0023
	ldy     #$20
	lda     #$FF
	sta     (sp),y
	iny
	sta     (sp),y
;
; if (y == 0) dy = 1;
;
L0023:	ldy     #$22
	lda     (sp),y
	iny
	ora     (sp),y
	bne     L0028
	ldy     #$20
	lda     #$01
	sta     (sp),y
	lda     #$00
	iny
	sta     (sp),y
;
; scroll(x, y);
;
L0028:	ldy     #$27
	jsr     pushwysp
	ldy     #$25
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _scroll
;
; while (1) {
;
	jmp     L000C

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

;
; pal_col(0,0x02); // set screen to dark blue
;
	lda     #$00
	jsr     pusha
	lda     #$02
	jsr     _pal_col
;
; pal_col(1,0x14); // pink
;
	lda     #$01
	jsr     pusha
	lda     #$14
	jsr     _pal_col
;
; pal_col(2,0x20); // grey
;
	lda     #$02
	jsr     pusha
	lda     #$20
	jsr     _pal_col
;
; pal_col(3,0x30); // white
;
	lda     #$03
	jsr     pusha
	lda     #$30
	jsr     _pal_col
;
; vrambuf_clear();
;
	jsr     _vrambuf_clear
;
; set_vram_update(updbuf);
;
	ldx     #$05
	lda     #$00
	jsr     _set_vram_update
;
; ppu_on_all();
;
	jsr     _ppu_on_all
;
; scroll_demo();
;
	jmp     _scroll_demo

.endproc

